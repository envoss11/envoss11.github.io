layout = "circle",
node = FALSE,
text_col = "black",
stylized = TRUE,
edge_type = 'link_arc',
use_labels = 'collider') +
theme_dag_blank()
tidy_dagitty(dag)
ggdag(dag,
layout = "circle",
node = FALSE,
text_col = "black",
stylized = TRUE,
edge_type = 'link_arc',
use_labels = 'name') +
theme_dag_blank()
ggdag(dag,
layout = "circle",
node = FALSE,
text = FALSE,
stylized = TRUE,
edge_type = 'link_arc',
use_labels = 'name') +
theme_dag_blank()
dag %>%
tidy_dagitty()
dag %>%
tidy_dagitty() %>%
mutate(name = gsub("_"," ", name))
?across
dag %>%
tidy_dagitty() %>%
mutate(across(c(name, to),name = gsub("_"," ", name)))
dag %>%
tidy_dagitty() %>%
mutate(across(c('name', 'to'),name = gsub("_"," ", name)))
dag %>%
tidy_dagitty() %>%
mutate(name = gsub("_"," ", name),
to = gsub("_"," ", to))
dag %>%
tidy_dagitty() %>%
mutate(name = gsub("_"," ", name),
to = gsub("_"," ", to)) %>%
ggdag(layout = "circle",
node = FALSE,
text_col = "black",
stylized = TRUE,
edge_type = 'link_arc',
use_labels = 'name') +
theme_dag_blank()
dag %>%
tidy_dagitty() %>%
mutate(name = gsub("_"," ", name),
to = gsub("_"," ", to)) %>%
ggdag(layout = "circle",
node = FALSE,
text_col = "black",
stylized = TRUE,
edge_type = 'link_arc') +
theme_dag_blank()
dag <- dagitty("dag {
Product_Quality [pos=\"0,0\"]
Sales_Team_Quality [pos=\"2,0\"]
Product_Viability [pos=\"1,-1\"]
Product_Quality -> Product_Viability [label=\"causes\"]
Sales_Team -> Product_Viability [label=\"causes\"]
Product_Quality <-> Sales_Team_Quality [label=\"negative association introduced by collider\", style=\"dashed\"]
Product_Viability [label=\"(collider)\", fontsize=10]
}")
dag %>%
tidy_dagitty() %>%
mutate(name = gsub("_"," ", name),
to = gsub("_"," ", to)) %>%
ggdag(layout = "circle",
node = FALSE,
text_col = "black",
stylized = TRUE,
edge_type = 'link_arc') +
theme_dag_blank()
dag <- dagitty("dag {
Product_Quality [pos=\"0,0\"]
Sales_Team_Quality [pos=\"2,0\"]
Product_Viability [pos=\"1,-1\"]
Product_Quality -> Product_Viability [label=\"causes\"]
Sales_Team -> Product_Viability [label=\"causes\"]
Product_Quality <-> Sales_Team [label=\"negative association introduced by collider\", style=\"dashed\"]
Product_Viability [label=\"(collider)\", fontsize=10]
}")
ggdag(dag,
layout = "circle",
node = FALSE,
text_col = "black",
stylized = TRUE,
edge_type = 'link_arc',
use_labels = 'name') +
theme_dag_blank()
dag %>%
tidy_dagitty() %>%
mutate(name = gsub("_"," ", name),
to = gsub("_"," ", to)) %>%
ggdag(layout = "circle",
node = FALSE,
text_col = "black",
stylized = TRUE,
edge_type = 'link_arc') +
theme_dag_blank()
dag <- dagitty("dag {
Product_Quality [pos=\"0,0\"]
Sales_Team [pos=\"2,0\"]
Product_Viability [pos=\"1,-1\"]
Product_Quality -> Product_Viability [label=\"causes\"]
Sales_Team -> Product_Viability [label=\"causes\"]
Product_Quality <-> Sales_Team [label=\"negative association introduced by collider\", style=\"dashed\"]
Product_Viability [label=\"(collider)\", fontsize=10]
}")
dag %>%
tidy_dagitty() %>%
mutate(name = gsub("_"," ", name),
to = gsub("_"," ", to)) %>%
ggdag(layout = "circle",
node = FALSE,
text_col = "black",
stylized = TRUE,
edge_type = 'link_arc') +
theme_dag_blank()
ggdag(dag,
layout = "circle",
node = FALSE,
text_col = "black",
stylized = TRUE,
edge_type = 'link_arc',
use_labels = 'name') +
theme_dag_blank()
ggdag(dag,
layout = "circle",
node = FALSE,
text_col = "black",
stylized = TRUE,
edge_type = 'link_arc') +
theme_dag_blank()
dag %>%
tidy_dagitty() %>%
mutate(name = gsub("_"," ", name),
to = gsub("_"," ", to)) %>%
ggdag(layout = "circle",
node = FALSE,
text_col = "black",
stylized = TRUE,
edge_type = 'link_arc') +
theme_dag_blank()
ggdag(dag,
layout = "circle",
node = FALSE,
text_col = "black",
stylized = TRUE,
edge_type = 'link_arc') +
theme_dag_blank()
dag %>%
tidy_dagitty() %>%
mutate(name = gsub("_"," ", name),
to = gsub("_"," ", to)) %>%
ggdag(layout = "circle",
node = FALSE,
text_col = "black",
stylized = TRUE,
edge_type = 'link_arc') +
theme_dag_blank()
dag %>%
tidy_dagitty() %>%
mutate(name = gsub("_"," ", name),
to = gsub("_"," ", to)) %>%
ggdag(layout = "circle",
node = FALSE,
text_col = "black",
stylized = TRUE,
edge_type = 'link_arc') %>%
scale_adjusted() +
theme_dag_blank()
dag %>%
tidy_dagitty() %>%
mutate(name = gsub("_"," ", name),
to = gsub("_"," ", to)) %>%
ggdag(layout = "circle",
node = FALSE,
text_col = "black",
stylized = TRUE,
edge_type = 'link_arc') +
theme_dag_blank()
?scale_adjusted
dag %>%
tidy_dagitty() %>%
mutate(name = gsub("_"," ", name),
to = gsub("_"," ", to)) %>%
ggdag_collider(layout = "circle",
node = FALSE,
text_col = "black",
stylized = TRUE,
edge_type = 'link_arc') +
theme_dag_blank()
dag <- dagitty("dag {
Product_Quality [pos=\"0,0\"]
Sales_Team [pos=\"2,0\"]
Product_Viability [outcome, pos=\"1,-1\"]
Product_Quality -> Product_Viability [label=\"causes\"]
Sales_Team -> Product_Viability [label=\"causes\"]
Product_Quality <-> Sales_Team [label=\"negative association introduced by collider\", style=\"dashed\"]
Product_Viability [label=\"(collider)\", fontsize=10]
}")
dag %>%
tidy_dagitty() %>%
mutate(name = gsub("_"," ", name),
to = gsub("_"," ", to)) %>%
ggdag(layout = "circle",
node = FALSE,
text_col = "black",
stylized = TRUE,
edge_type = 'link_arc') +
theme_dag_blank()
dag %>%
tidy_dagitty() %>%
mutate(name = gsub("_"," ", name),
to = gsub("_"," ", to)) %>%
ggdag_collider(layout = "circle",
node = FALSE,
text_col = "black",
stylized = TRUE,
edge_type = 'link_arc') +
theme_dag_blank()
?ggdag_collider
dag %>%
tidy_dagitty() %>%
mutate(name = gsub("_"," ", name),
to = gsub("_"," ", to)) %>%
ggdag_collider(layout = "circle",
node = FALSE,
text_col = "black",
stylized = TRUE,
edge_type = 'link_arc') +
theme_dag_blank()
dag %>%
tidy_dagitty()
dag %>%
tidy_dagitty() %>%
# mutate(name = gsub("_"," ", name),
#        to = gsub("_"," ", to)) %>%
ggdag_collider(layout = "circle",
node = FALSE,
text_col = "black",
stylized = TRUE,
edge_type = 'link_arc') +
theme_dag_blank()
dag %>%
tidy_dagitty() %>%
# mutate(name = gsub("_"," ", name),
#        to = gsub("_"," ", to)) %>%
ggdag_collider(layout = "circle",
node = TRUE,
text_col = "black",
stylized = TRUE,
edge_type = 'link_arc') +
theme_dag_blank()
dag %>%
tidy_dagitty() %>%
# mutate(name = gsub("_"," ", name),
#        to = gsub("_"," ", to)) %>%
ggdag_collider(layout = "circle",
node = TRUE,
text_col = "black",
edge_type = 'link_arc') +
theme_dag_blank()
dag %>%
tidy_dagitty() %>%
ggdag_dseparated(controlling_for = "Product_Viability")
collider_triangle()
collider_triangle() %>%
ggdag_dseparated(controlling_for = "m")
dag %>%
tidy_dagitty()
dag %>%
ggdag_dseparated(controlling_for = "Product_Viability")
dag <- dagitty("dag {
Product_Quality [pos=\"0,0\"]
Sales_Team [pos=\"2,0\"]
Product_Viability [outcome, pos=\"1,-1\"]
Product_Quality -> Product_Viability
Sales_Team -> Product_Viability
}")
dag %>%
ggdag_dseparated(controlling_for = "Product_Viability")
?ggdag_dseparated
dag <- dagitty("dag {
Product_Quality [pos=\"0,0\"]
Sales_Team [exposure,pos=\"2,0\"]
Product_Viability [outcome, pos=\"1,-1\"]
Product_Quality -> Product_Viability
Sales_Team -> Product_Viability
}")
dag %>%
ggdag_dseparated(controlling_for = "Product_Viability")
collider_triangle() %>%
ggdag_dseparated(controlling_for = "m",
show.legend = FALSE)
dag %>%
ggdag_dseparated(controlling_for = "Product_Viability") +
theme(legend.position = "none")
dag %>%
ggdag_dseparated(controlling_for = "Product_Viability") +
theme_minimal(legend.position = "none")
dag %>%
ggdag_dseparated(controlling_for = "Product_Viability") +
theme(legend.position = "none") +
theme_minimal()
dag %>%
ggdag_dseparated(controlling_for = "Product_Viability") +
theme_minimal() +
theme(legend.position = "none")
dag %>%
ggdag_dseparated(controlling_for = "Product_Viability") +
theme_minimal() +
theme(legend.position = "none",
axis.text.x=element_blank(),
axis.text.y=element_blank())
dag %>%
ggdag_dseparated(controlling_for = "Product_Viability") +
theme_minimal() +
theme(legend.position = "none",
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.x=element_blank(),
axis.ticks.y=element_blank())
dag %>%
ggdag_dseparated(controlling_for = "Product_Viability") +
theme_minimal() +
theme(legend.position = "none",
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.x=element_blank(),
axis.ticks.y=element_blank(),
axis.title.x=element_blank())
dag %>%
ggdag_dseparated(controlling_for = "Product_Viability") +
theme_minimal() +
theme(legend.position = "none",
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.x=element_blank(),
axis.ticks.y=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank())
dag %>%
ggdag_dseparated(controlling_for = "Product_Viability",
node_size = 32) +
theme_minimal() +
theme(legend.position = "none",
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.x=element_blank(),
axis.ticks.y=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank())
dag %>%
ggdag_dseparated(controlling_for = "Product_Viability",
node_size = 40) +
theme_minimal() +
theme(legend.position = "none",
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.x=element_blank(),
axis.ticks.y=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank())
dag %>%
ggdag_dseparated(controlling_for = "Product_Viability",
node_size = 42) +
theme_minimal() +
theme(legend.position = "none",
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.x=element_blank(),
axis.ticks.y=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank())
dag %>%
ggdag_dseparated(controlling_for = "Product_Viability") +
theme_minimal() +
theme(legend.position = "none",
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.x=element_blank(),
axis.ticks.y=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank())
dag %>%
ggdag_dseparated(controlling_for = "Product_Viability",
text_col = "black") +
theme_minimal() +
theme(legend.position = "none",
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.x=element_blank(),
axis.ticks.y=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank())
dag %>%
ggdag_dseparated(controlling_for = "Product_Viability",
text_col = "black") +
theme_classic() +
theme(legend.position = "none",
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.x=element_blank(),
axis.ticks.y=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank())
dag %>%
ggdag_dseparated(controlling_for = "Product_Viability",
text_col = "black") +
theme_classic() +
theme(legend.position = "none",
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.x=element_blank(),
axis.ticks.y=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.border = element_blank())
dag %>%
ggdag_dseparated(controlling_for = "Product_Viability",
text_col = "black") +
theme_classic() +
theme(legend.position = "none",
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.x=element_blank(),
axis.ticks.y=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.line = element_blank())
dag %>%
ggdag_dseparated(controlling_for = "Product_Viability",
text_col = "black") +
theme_classic() +
theme(legend.position = "none",
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.x=element_blank(),
axis.ticks.y=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.line = element_blank())
library(dagitty)
library(ggdag)
library(ggplot2)
dag <- dagitty("dag {
Product_Quality [pos=\"0,0\"]
Sales_Team [exposure,pos=\"2,0\"]
Product_Viability [outcome, pos=\"1,-1\"]
Product_Quality -> Product_Viability
Sales_Team -> Product_Viability
}")
dag %>%
ggdag_dseparated(controlling_for = "Product_Viability",
text_col = "black") +
theme_classic() +
theme(legend.position = "none",
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.x=element_blank(),
axis.ticks.y=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.line = element_blank())
collider_triangle() %>%
ggdag_dseparated(controlling_for = "m")
library(dagitty)
library(ggdag)
library(ggplot2)
dag <- dagitty("dag {
Product_Quality [pos=\"0,0\"]
Sales_Team [exposure,pos=\"2,0\"]
Product_Viability [outcome, pos=\"1,-1\"]
Product_Quality -> Product_Viability
Sales_Team -> Product_Viability
}")
dag %>%
ggdag_dseparated(controlling_for = "Product_Viability",
text_col = "black") +
theme_classic() +
theme(legend.position = "none",
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.x=element_blank(),
axis.ticks.y=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.line = element_blank())
set.seed(86753)
n = 200
p = 0.1
prod_qual = rnorm(n)
sales_team = rnorm(n)
score = prod_qual + sales_team
q = quantile(score, 1-p)
selected = ifelse(score >= q, TRUE, FALSE)
cor(prod_qual[selected],
sales_team[selected])
true_cor = cor(prod_qual,
sales_team)
true_cor
library(blogdown)
blogdown::hugo_server()
